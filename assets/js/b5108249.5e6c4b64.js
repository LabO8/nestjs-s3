"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[566],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return u}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,h=a(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,m=d["".concat(c,".").concat(u)]||d[u]||l[u]||s;return n?o.createElement(m,i(i({ref:t},h),{},{components:n})):o.createElement(m,i({ref:t},h))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var p=2;p<s;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6838:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return h}});var o=n(7462),r=n(3366),s=(n(7294),n(3905)),i=["components"],a={id:"objects",title:"Objects service",sidebar_label:"Objects",slug:"/objects-service"},c=void 0,p={unversionedId:"objects",id:"objects",title:"Objects service",description:"Introduction",source:"@site/docs/objects.md",sourceDirName:".",slug:"/objects-service",permalink:"/nestjs-s3/objects-service",editUrl:"https://github.com/LabO8/nestjs-s3/docs/objects.md",tags:[],version:"current",frontMatter:{id:"objects",title:"Objects service",sidebar_label:"Objects",slug:"/objects-service"},sidebar:"docsSidebar",previous:{title:"Buckets",permalink:"/nestjs-s3/buckets-service"},next:{title:"Signed URL service",permalink:"/nestjs-s3/signed-url-service"}},h=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Basic usage",id:"basic-usage",children:[{value:"Listing objects",id:"listing-objects",children:[],level:3},{value:"Putting objects in s3",id:"putting-objects-in-s3",children:[],level:3},{value:"Geting objects",id:"geting-objects",children:[],level:3},{value:"Deleting object",id:"deleting-object",children:[],level:3},{value:"Deleting multiple objects",id:"deleting-multiple-objects",children:[],level:3}],level:2}],l={toc:h};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"The S3 objects service is used when we want to interact with objects in a bucket"),(0,s.kt)("p",null,"You can do simple operations like puting, fetching and listing objects."),(0,s.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,s.kt)("p",null,"The pre-requisites to use this service are to have the main module initialized in our app, so we can access all the services it exports.\nLater when we need a service we can simply:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Injectable } from '@nestjs/common';\nimport { ObjectsService } from '@lab08/nestjs-s3';\n\n@Injectable()\nexport class MyService {\n  public constructor(private readonly objectsService: ObjectsService) {}\n}\n")),(0,s.kt)("p",null,"then we can simply call start using the service freely."),(0,s.kt)("h3",{id:"listing-objects"},"Listing objects"),(0,s.kt)("p",null,"To list all objects from a bucket we can simple call"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.listObjects('bucket-name', options);\n")),(0,s.kt)("p",null,"which will return a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise")," containing"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ListObjectsOutput {\n  /**\n   * <p>A flag that indicates whether Amazon S3 returned all of the results that satisfied the search\n   *          criteria.</p>\n   */\n  IsTruncated?: boolean;\n  /**\n   * <p>Indicates where the bucket listing begins. Marker is included in the response if it\n   *          was sent with the request.</p>\n   */\n  Marker?: string;\n  /**\n   * <p>When the response is truncated (the IsTruncated element value in the response is true), you\n   *          can use the key name in this field as a marker in the subsequent request to get the next set of\n   *          objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if\n   *          you have delimiter request parameter specified. If the response does not include the NextMarker\n   *          and it is truncated, you can use the value of the last Key in the response as the marker in\n   *          the subsequent request to get the next set of object keys.</p>\n   */\n  NextMarker?: string;\n  /**\n   * <p>Metadata about each object returned.</p>\n   */\n  Contents?: _Object[];\n  /**\n   * <p>The bucket name.</p>\n   */\n  Name?: string;\n  /**\n   * <p>Keys that begin with the indicated prefix.</p>\n   */\n  Prefix?: string;\n  /**\n   * <p>Causes keys that contain the exact string between the prefix and the first occurrence of\n   *          the delimiter to be rolled up into a single result element in the\n   *             <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere\n   *          in the response. Each rolled-up result counts as only one return against the\n   *             <code>MaxKeys</code> value.</p>\n   */\n  Delimiter?: string;\n  /**\n   * <p>The maximum number of keys returned in the response body.</p>\n   */\n  MaxKeys?: number;\n  /**\n   * <p>All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating\n   *          the number of returns. </p>\n   *\n   *          <p>A response can contain CommonPrefixes only if you specify a delimiter.</p>\n   *\n   *          <p>CommonPrefixes contains all (if there are any) keys between Prefix and the next\n   *          occurrence of the string specified by the delimiter.</p>\n   *\n   *          <p> CommonPrefixes lists keys that act like subdirectories in the directory specified by\n   *          Prefix.</p>\n   *\n   *          <p>For example, if the prefix is notes/ and the delimiter is a slash (/) as in\n   *          notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a\n   *          common prefix count as a single return when calculating the number of returns.</p>\n   */\n  CommonPrefixes?: CommonPrefix[];\n  /**\n   * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n}\n")),(0,s.kt)("p",null,"it also accepts the following options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"    /**\n     * <p>A delimiter is a character you use to group keys.</p>\n     */\n    Delimiter?: string;\n    /**\n     * <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding\n     *          method to use. An object key may contain any Unicode character; however, XML 1.0 parser\n     *          cannot parse some characters, such as characters with an ASCII value from 0 to 10. For\n     *          characters that are not supported in XML 1.0, you can add this parameter to request that\n     *          Amazon S3 encode the keys in the response.</p>\n     */\n    EncodingType?: EncodingType | string;\n    /**\n     * <p>Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after\n     *           this specified key. A marker can be any key in the bucket.</p>\n     */\n    Marker?: string;\n    /**\n     * <p>Sets the maximum number of keys returned in the response. By default the action returns up\n     *          to 1,000 key names. The response might contain fewer keys but will never have more.\n     *       </p>\n     */\n    MaxKeys?: number;\n    /**\n     * <p>Limits the response to keys that begin with the specified prefix.</p>\n     */\n    Prefix?: string;\n    /**\n     * <p>Confirms that the requester knows that they will be charged for the list of objects\n     *          request. Bucket owners need not specify this parameter in their requests.</p>\n     */\n    RequestPayer?: RequestPayer | string;\n    /**\n     * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n     */\n    ExpectedBucketOwner?: string;\n")),(0,s.kt)("h3",{id:"putting-objects-in-s3"},"Putting objects in s3"),(0,s.kt)("p",null,"There are two ways to put objects in s3, from a Buffer or a local path."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Keep in mind that all remotes are prefixed if you specified a prefix when the module was initialized")),(0,s.kt)("p",null,"If you want to use a buffer you can use"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.putObject('bucket-name', buffer, remote, options);\n")),(0,s.kt)("p",null,"or using a local path"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.putObjectFromPath('bucket-name', '/path-to-object'/, remote, options);\n")),(0,s.kt)("p",null,"which will call the upper method and create the buffer automatically."),(0,s.kt)("p",null,"Both of them accept the following properties:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'type PutObjectOptions {\n     /**\n     * <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned\n     *       ACL</a>.</p>\n     *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n     */\n    ACL?: ObjectCannedACL | string;\n    /**\n     * <p> Can specify caching behavior along the request/reply chain. For more\n     *          information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>\n     */\n    CacheControl?: string;\n    /**\n     * <p>Specifies presentational information for the object. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1">http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>.</p>\n     */\n    ContentDisposition?: string;\n    /**\n     * <p>Specifies what content encodings have been applied to the object and thus what decoding\n     *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n     *          field. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>.</p>\n     */\n    ContentEncoding?: string;\n    /**\n     * <p>The language the content is in.</p>\n     */\n    ContentLanguage?: string;\n    /**\n     * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be\n     *          determined automatically. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>.</p>\n     */\n    ContentLength?: number;\n    /**\n     * <p>The base64-encoded 128-bit MD5 digest of the message (without the headers) according to\n     *          RFC 1864. This header can be used as a message integrity check to verify that the data is\n     *          the same data that was originally sent. Although it is optional, we recommend using the\n     *          Content-MD5 mechanism as an end-to-end integrity check. For more information about REST\n     *          request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST\n     *             Authentication</a>.</p>\n     */\n    ContentMD5?: string;\n    /**\n     * <p>A standard MIME type describing the format of the contents. For more information, see\n     *             <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>.</p>\n     */\n    ContentType?: string;\n    /**\n     * <p>The date and time at which the object is no longer cacheable. For more information, see\n     *             <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.</p>\n     */\n    Expires?: Date;\n    /**\n     * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the\n     *       object.</p>\n     *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n     */\n    GrantFullControl?: string;\n    /**\n     * <p>Allows grantee to read the object data and its\n     *       metadata.</p>\n     *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n     */\n    GrantRead?: string;\n    /**\n     * <p>Allows grantee to read the object ACL.</p>\n     *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n     */\n    GrantReadACP?: string;\n    /**\n     * <p>Allows grantee to write the ACL for the applicable\n     *       object.</p>\n     *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n     */\n    GrantWriteACP?: string;\n    /**\n     * <p>A map of metadata to store with the object in S3.</p>\n     */\n    Metadata?: {\n        [key: string]: string;\n    };\n    /**\n     * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n     *          AES256, aws:kms).</p>\n     */\n    ServerSideEncryption?: ServerSideEncryption | string;\n    /**\n     * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The\n     *          STANDARD storage class provides high durability and high availability. Depending on\n     *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses\n     *          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the\n     *          <i>Amazon S3 User Guide</i>.</p>\n     */\n    StorageClass?: StorageClass | string;\n    /**\n     * <p>If the bucket is configured as a website, redirects requests for this object to another\n     *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n     *          the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a>.</p>\n     *\n     *          <p>In the following example, the request header sets the redirect to an object\n     *          (anotherPage.html) in the same bucket:</p>\n     *\n     *          <p>\n     *             <code>x-amz-website-redirect-location: /anotherPage.html</code>\n     *          </p>\n     *\n     *          <p>In the following example, the request header sets the object redirect to another\n     *          website:</p>\n     *\n     *          <p>\n     *             <code>x-amz-website-redirect-location: http://www.example.com/</code>\n     *          </p>\n     *\n     *          <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to Configure Website Page\n     *             Redirects</a>. </p>\n     */\n    WebsiteRedirectLocation?: string;\n    /**\n     * <p>Specifies the algorithm to use to when encrypting the object (for example,\n     *          AES256).</p>\n     */\n    SSECustomerAlgorithm?: string;\n    /**\n     * <p>Specifies the customer-provided encryption key for Amazon S3 to encrypt. This\n     *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n     *          encryption key. The key must be appropriate for use with the algorithm specified in the\n     *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n     */\n    SSECustomerKey?: string;\n    /**\n     * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n     *          this header for a message integrity check to ensure that the encryption key was transmitted\n     *          without error.</p>\n     */\n    SSECustomerKeyMD5?: string;\n    /**\n     * <p>If <code>x-amz-server-side-encryption</code> is present and has the value of\n     *          <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service\n     *          (Amazon Web Services KMS) symmetrical customer-managed key that was used for the\n     *          object. If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not\n     *          provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services\n     *          managed key to protect the data. If the KMS key does not exist in the same account\n     *          issuing the command, you must use the full ARN and not just the ID.\n     *       </p>\n     */\n    SSEKMSKeyId?: string;\n    /**\n     * <p>Specifies the Amazon Web Services KMS Encryption Context for object encryption. The value of this\n     *          header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value\n     *          pairs.</p>\n     */\n    SSEKMSEncryptionContext?: string;\n    /**\n     * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>\n     *          <p>Specifying this header with a PUT action doesn\u2019t affect bucket-level settings for S3 Bucket Key.</p>\n     */\n    BucketKeyEnabled?: boolean;\n    /**\n     * <p>Confirms that the requester knows they will be charged for the request. Bucket\n     *          owners need not specify this parameter in their requests. For information about downloading\n     *          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in\n     *             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n     */\n    RequestPayer?: RequestPayer | string;\n    /**\n     * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For\n     *          example, "Key1=Value1")</p>\n     */\n    Tagging?: string;\n    /**\n     * <p>The Object Lock mode that you want to apply to this object.</p>\n     */\n    ObjectLockMode?: ObjectLockMode | string;\n    /**\n     * <p>The date and time you want this object\'s Object Lock to expire. Must be formatted\n     *          as a timestamp parameter.</p>\n     */\n    ObjectLockRetainUntilDate?: Date;\n    /**\n     * <p>Specifies whether a legal hold will be applied to this object. For more information\n     *          about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object\n     *          Lock</a>.</p>\n     */\n    ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n    /**\n     * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n     */\n    ExpectedBucketOwner?: string;\n}\n')),(0,s.kt)("p",null,"and as a result it will return a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise")," with:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'interface PutObjectOutput {\n  /**\n   * <p> If the expiration is configured for the object (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>), the response includes this header. It\n   *          includes the expiry-date and rule-id key-value pairs that provide information about the object\n   *          expiration. The value of the rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n  /**\n   * <p>Entity tag for the uploaded object.</p>\n   */\n  ETag?: string;\n  /**\n   * <p>If you specified server-side encryption either with an Amazon Web Services KMS key\n   *          or Amazon S3-managed encryption key in your PUT request, the response includes this header. It\n   *          confirms the encryption algorithm that Amazon S3 used to encrypt the object.</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n  /**\n   * <p>Version of the object.</p>\n   */\n  VersionId?: string;\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n  /**\n   * <p>If <code>x-amz-server-side-encryption</code> is present and has the value of\n   *             <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service\n   *          (Amazon Web Services KMS) symmetric customer-managed key that was used for the\n   *          object. </p>\n   */\n  SSEKMSKeyId?: string;\n  /**\n   * <p>If present, specifies the Amazon Web Services KMS Encryption Context for object encryption. The\n   *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption\n   *          context key-value pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n  /**\n   * <p>Indicates whether the uploaded object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n')),(0,s.kt)("h3",{id:"geting-objects"},"Geting objects"),(0,s.kt)("p",null,"If we want to fetch an object, we can use:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.getObject('bucket-name', 'remote', options);\n")),(0,s.kt)("p",null,"Which accepts:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'type GetObjectOptions {\n/**\n     * <p>Return the object only if its entity tag (ETag) is the same as the one specified,\n     *          otherwise return a 412 (precondition failed).</p>\n     */\n    IfMatch?: string;\n    /**\n     * <p>Return the object only if it has been modified since the specified time, otherwise\n     *          return a 304 (not modified).</p>\n     */\n    IfModifiedSince?: Date;\n    /**\n     * <p>Return the object only if its entity tag (ETag) is different from the one specified,\n     *          otherwise return a 304 (not modified).</p>\n     */\n    IfNoneMatch?: string;\n    /**\n     * <p>Return the object only if it has not been modified since the specified time, otherwise\n     *          return a 412 (precondition failed).</p>\n     */\n    IfUnmodifiedSince?: Date;\n    /**\n     * <p>Downloads the specified range bytes of an object. For more information about the HTTP\n     *          Range header, see <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n     *          <note>\n     *             <p>Amazon S3 doesn\'t support retrieving multiple ranges of data per <code>GET</code>\n     *             request.</p>\n     *          </note>\n     */\n    Range?: string;\n    /**\n     * <p>Sets the <code>Cache-Control</code> header of the response.</p>\n     */\n    ResponseCacheControl?: string;\n    /**\n     * <p>Sets the <code>Content-Disposition</code> header of the response</p>\n     */\n    ResponseContentDisposition?: string;\n    /**\n     * <p>Sets the <code>Content-Encoding</code> header of the response.</p>\n     */\n    ResponseContentEncoding?: string;\n    /**\n     * <p>Sets the <code>Content-Language</code> header of the response.</p>\n     */\n    ResponseContentLanguage?: string;\n    /**\n     * <p>Sets the <code>Content-Type</code> header of the response.</p>\n     */\n    ResponseContentType?: string;\n    /**\n     * <p>Sets the <code>Expires</code> header of the response.</p>\n     */\n    ResponseExpires?: Date;\n    /**\n     * <p>VersionId used to reference a specific version of the object.</p>\n     */\n    VersionId?: string;\n    /**\n     * <p>Specifies the algorithm to use to when decrypting the object (for example,\n     *          AES256).</p>\n     */\n    SSECustomerAlgorithm?: string;\n    /**\n     * <p>Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This\n     *          value is used to decrypt the object when recovering it and must match the one used when\n     *          storing the data. The key must be appropriate for use with the algorithm specified in the\n     *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n     */\n    SSECustomerKey?: string;\n    /**\n     * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n     *          this header for a message integrity check to ensure that the encryption key was transmitted\n     *          without error.</p>\n     */\n    SSECustomerKeyMD5?: string;\n    /**\n     * <p>Confirms that the requester knows they will be charged for the request. Bucket\n     *          owners need not specify this parameter in their requests. For information about downloading\n     *          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in\n     *             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n     */\n    RequestPayer?: RequestPayer | string;\n    /**\n     * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.\n     *          Effectively performs a \'ranged\' GET request for the part specified. Useful for downloading\n     *          just a part of an object.</p>\n     */\n    PartNumber?: number;\n    /**\n     * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n     */\n    ExpectedBucketOwner?: string;\n}\n')),(0,s.kt)("p",null,"and will return a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise")," with the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface GetObjectOutput {\n  /**\n   * <p>Object data.</p>\n   */\n  Body?: Readable | ReadableStream | Blob;\n  /**\n   * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If\n   *          false, this response header does not appear in the response.</p>\n   */\n  DeleteMarker?: boolean;\n  /**\n   * <p>Indicates that a range of bytes was specified.</p>\n   */\n  AcceptRanges?: string;\n  /**\n   * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes\n   *          this header. It includes the expiry-date and rule-id key-value pairs providing object\n   *          expiration information. The value of the rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n  /**\n   * <p>Provides information about object restoration action and expiration time of the\n   *          restored object copy.</p>\n   */\n  Restore?: string;\n  /**\n   * <p>Creation date of the object.</p>\n   */\n  LastModified?: Date;\n  /**\n   * <p>Size of the body in bytes.</p>\n   */\n  ContentLength?: number;\n  /**\n   * <p>An ETag is an opaque identifier assigned by a web server to a specific version of a\n   *          resource found at a URL.</p>\n   */\n  ETag?: string;\n  /**\n   * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>\n   *          headers. This can happen if you create metadata using an API like SOAP that supports more\n   *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose\n   *          values are not legal HTTP headers.</p>\n   */\n  MissingMeta?: number;\n  /**\n   * <p>Version of the object.</p>\n   */\n  VersionId?: string;\n  /**\n   * <p>Specifies caching behavior along the request/reply chain.</p>\n   */\n  CacheControl?: string;\n  /**\n   * <p>Specifies presentational information for the object.</p>\n   */\n  ContentDisposition?: string;\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field.</p>\n   */\n  ContentEncoding?: string;\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n  /**\n   * <p>The portion of the object returned in the response.</p>\n   */\n  ContentRange?: string;\n  /**\n   * <p>A standard MIME type describing the format of the object data.</p>\n   */\n  ContentType?: string;\n  /**\n   * <p>The date and time at which the object is no longer cacheable.</p>\n   */\n  Expires?: Date;\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata.</p>\n   */\n  WebsiteRedirectLocation?: string;\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: {\n    [key: string]: string;\n  };\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n  /**\n   * <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric\n   *          customer managed key that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n  /**\n   * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n  /**\n   * <p>Provides storage class information of the object. Amazon S3 returns this header for all\n   *          objects except for S3 Standard storage class objects.</p>\n   */\n  StorageClass?: StorageClass | string;\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n  /**\n   * <p>Amazon S3 can return this if your request involves a bucket that is either a source or\n   *          destination in a replication rule.</p>\n   */\n  ReplicationStatus?: ReplicationStatus | string;\n  /**\n   * <p>The count of parts this object has.</p>\n   */\n  PartsCount?: number;\n  /**\n   * <p>The number of tags, if any, on the object.</p>\n   */\n  TagCount?: number;\n  /**\n   * <p>The Object Lock mode currently in place for this object.</p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n  /**\n   * <p>The date and time when this object's Object Lock will expire.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n  /**\n   * <p>Indicates whether this object has an active legal hold. This field is only returned if\n   *          you have permission to view an object's legal hold status. </p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n}\n")),(0,s.kt)("h3",{id:"deleting-object"},"Deleting object"),(0,s.kt)("p",null,"If we want to remove an object from a bucket, we can use:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.deleteObject('bucket-name', 'remote', options);\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Again, if you specified a prefix in your module init, all remotes will be auto prefixed.")),(0,s.kt)("p",null,"This method accepts the following options:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'type DeleteObjectOptions {\n    /**\n     * <p>The concatenation of the authentication device\'s serial number, a space, and the value\n     *          that is displayed on your authentication device. Required to delete a versioned permanently\n     *          object if versioning is configured with MFA delete enabled.</p>\n     */\n    MFA?: string;\n    /**\n     * <p>VersionId used to reference a specific version of the object.</p>\n     */\n    VersionId?: string;\n    /**\n     * <p>Confirms that the requester knows they will be charged for the request. Bucket\n     *          owners need not specify this parameter in their requests. For information about downloading\n     *          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in\n     *             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n     */\n    RequestPayer?: RequestPayer | string;\n    /**\n     * <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process\n     *          this operation. To use this header, you must have the <code>s3:PutBucketPublicAccessBlock</code>\n     *          permission.</p>\n     */\n    BypassGovernanceRetention?: boolean;\n    /**\n     * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n     */\n    ExpectedBucketOwner?: string;\n}\n')),(0,s.kt)("p",null,"and will return a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise")," with the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface DeleteObjectOutput {\n  /**\n   * <p>Specifies whether the versioned object that was permanently deleted was (true) or was\n   *          not (false) a delete marker.</p>\n   */\n  DeleteMarker?: boolean;\n  /**\n   * <p>Returns the version ID of the delete marker created as a result of the DELETE\n   *          operation.</p>\n   */\n  VersionId?: string;\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n")),(0,s.kt)("h3",{id:"deleting-multiple-objects"},"Deleting multiple objects"),(0,s.kt)("p",null,"We can also bulk delete objects by using:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await this.objectsService.deleteObjects('bucket-name', ['remote'], options);\n")),(0,s.kt)("p",null,"The method accepts:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'type DeleteObjectsOptions = {\n  /**\n   * <p>The concatenation of the authentication device\'s serial number, a space, and the value\n   *          that is displayed on your authentication device. Required to delete a versioned permanently\n   *          object if versioning is configured with MFA delete enabled.</p>\n   */\n  MFA?: string;\n  /**\n   * <p>Confirms that the requester knows they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n  /**\n   * <p>Specifies whether you want to delete this object even if it has a Governance-type Object\n   *          Lock in place. To use this header, you must have the <code>s3:PutBucketPublicAccessBlock</code>\n   *          permission.</p>\n   */\n  BypassGovernanceRetention?: boolean;\n  /**\n   * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n};\n')),(0,s.kt)("p",null,"and wil return a ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise")," with:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface DeleteObjectsOutput {\n  /**\n   * <p>Container element for a successful delete. It identifies the object that was\n   *          successfully deleted.</p>\n   */\n  Deleted?: DeletedObject[];\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n  /**\n   * <p>Container for a failed delete action that describes the object that Amazon S3 attempted to\n   *          delete and the error it encountered.</p>\n   */\n  Errors?: _Error[];\n}\n")))}d.isMDXComponent=!0}}]);