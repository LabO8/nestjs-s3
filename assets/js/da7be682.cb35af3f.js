"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[702],{9470:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=t(4848),s=t(8453);const r={id:"download-helper",title:"Download helper",sidebar_label:"Download helper",slug:"/download-helper"},i=void 0,a={id:"download-helper",title:"Download helper",description:"Introduction",source:"@site/docs/download-helper.md",sourceDirName:".",slug:"/download-helper",permalink:"/nestjs-s3/download-helper",draft:!1,unlisted:!1,editUrl:"https://github.com/LabO8/nestjs-s3/docs/download-helper.md",tags:[],version:"current",frontMatter:{id:"download-helper",title:"Download helper",sidebar_label:"Download helper",slug:"/download-helper"},sidebar:"docsSidebar",previous:{title:"Signed URL service",permalink:"/nestjs-s3/signed-url-service"},next:{title:"Prefixing",permalink:"/nestjs-s3/prefixing"}},d={},c=[{value:"Introduction",id:"introduction",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Sometimes, we have to do day-to-day tasks like downloading objects and storing them locally. This leads to a lot of boilerplate code, for managing the directories, writing to files, etc."}),"\n",(0,o.jsx)(n.p,{children:"In order to do that we can use the download helper."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@nestjs/common';\nimport { DownloadService } from '@lab08/nestjs-s3';\n\n@Injectable()\nexport class MyService {\n  public constructor(private readonly downloadService: DownloadService) {}\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"What the download service does is help us do these day-to-day tasks easily and without a lot of code."}),"\n",(0,o.jsx)(n.p,{children:"In order to download an object, we can simply"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const localPath = this.downloadService.download(bucket, remote, downloadDirectory, downloadOptions, options);\n"})}),"\n",(0,o.jsx)(n.p,{children:"we can pass the following download options:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export type DownloadOptions = {\n  mode?: number | string;\n  createPath?: boolean;\n  filename?: string | null;\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"Defaults are"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const defaults: DownloadOptions = {\n  mode: 0o755,\n  createPath: true,\n  filename: null,\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"and we can pass options for the request made to S3"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'type GetObjectOptions {\n/**\n     * <p>Return the object only if its entity tag (ETag) is the same as the one specified,\n     *          otherwise return a 412 (precondition failed).</p>\n     */\n    IfMatch?: string;\n    /**\n     * <p>Return the object only if it has been modified since the specified time, otherwise\n     *          return a 304 (not modified).</p>\n     */\n    IfModifiedSince?: Date;\n    /**\n     * <p>Return the object only if its entity tag (ETag) is different from the one specified,\n     *          otherwise return a 304 (not modified).</p>\n     */\n    IfNoneMatch?: string;\n    /**\n     * <p>Return the object only if it has not been modified since the specified time, otherwise\n     *          return a 412 (precondition failed).</p>\n     */\n    IfUnmodifiedSince?: Date;\n    /**\n     * <p>Downloads the specified range bytes of an object. For more information about the HTTP\n     *          Range header, see <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n     *          <note>\n     *             <p>Amazon S3 doesn\'t support retrieving multiple ranges of data per <code>GET</code>\n     *             request.</p>\n     *          </note>\n     */\n    Range?: string;\n    /**\n     * <p>Sets the <code>Cache-Control</code> header of the response.</p>\n     */\n    ResponseCacheControl?: string;\n    /**\n     * <p>Sets the <code>Content-Disposition</code> header of the response</p>\n     */\n    ResponseContentDisposition?: string;\n    /**\n     * <p>Sets the <code>Content-Encoding</code> header of the response.</p>\n     */\n    ResponseContentEncoding?: string;\n    /**\n     * <p>Sets the <code>Content-Language</code> header of the response.</p>\n     */\n    ResponseContentLanguage?: string;\n    /**\n     * <p>Sets the <code>Content-Type</code> header of the response.</p>\n     */\n    ResponseContentType?: string;\n    /**\n     * <p>Sets the <code>Expires</code> header of the response.</p>\n     */\n    ResponseExpires?: Date;\n    /**\n     * <p>VersionId used to reference a specific version of the object.</p>\n     */\n    VersionId?: string;\n    /**\n     * <p>Specifies the algorithm to use when decrypting the object (for example,\n     *          AES256).</p>\n     */\n    SSECustomerAlgorithm?: string;\n    /**\n     * <p>Specifies the customer-provided encryption key for Amazon S3 to encrypt the data. This\n     *          value is used to decrypt the object when recovering it and must match the one used when\n     *          storing the data. The key must be appropriate for use with the algorithm specified in the\n     *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n     */\n    SSECustomerKey?: string;\n    /**\n     * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n     *          this header for message integrity check to ensure that the encryption key was transmitted\n     *          without error.</p>\n     */\n    SSECustomerKeyMD5?: string;\n    /**\n     * <p>Confirms that the requester knows they will be charged for the request. Bucket\n     *          owners need not specify this parameter in their requests. For information about downloading\n     *          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in\n     *             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n     */\n    RequestPayer?: RequestPayer | string;\n    /**\n     * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.\n     *          Effectively performs a \'ranged\' GET request for the part specified. Useful for downloading\n     *          just a part of an object.</p>\n     */\n    PartNumber?: number;\n    /**\n     * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n     */\n    ExpectedBucketOwner?: string;\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This method will return a ",(0,o.jsx)(n.code,{children:"Promise"})," containing the local absolute path."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);